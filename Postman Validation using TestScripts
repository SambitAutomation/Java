URL => https://reqres.in/api/users/2


//status code validation
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

//Alternate Way of Status code verification 
tests["verify the status code again"] = responseCode.code == 200;

//Check proper data is coming or not for respective URL 
tests["First Name is coming or not"] = responseBody.has("Emma");

//Multiple assertions
pm.test("Validate multiple fields in resonse", function () {
    responseJson = pm.response.json();
    pm.expect(responseJson.data.id).to.eql(3);
    pm.expect(responseJson.data.email).to.eql("emma.wong@reqres.in");
    pm.expect(responseJson.data.first_name).to.eql("Emma");
    pm.expect(responseJson.data.last_name).to.eql("Wong");

});


//handling responses that don't parse
pm.test("Body Conatins String", function () {
    pm.expect(pm.response.text()).to.include("emma.wong@reqres.in")
});


//status code being on of set
pm.test("Successful Status code", function () {
    pm.expect(pm.response.code).to.be.oneOf([200, 201])
});

//Testing headers
pm.test("Content-Type header present", function () {
    pm.response.to.have.header("Content-Type");
});


pm.test("Content-Type Value", function () {
    pm.expect(pm.response.headers.get("Content-Type")).to.eql("application/json; charset=utf-8");
});


//Testing Cookies
pm.test("Cookies is present", function () {
    pm.expect(pm.cookies.has("__cfduid")).to.be.true;
});

pm.test("Cookies Value Check", function () {
    pm.expect(pm.cookies.get("__cfduid")).to.eql("d14ee5d1217d3dbf54ab96974e7ba69431608127561");
});

//Response Time
pm.test("Response time less than 130 ms", function () {
     pm.expect(pm.reponseTime).to.be.below(130);
});


